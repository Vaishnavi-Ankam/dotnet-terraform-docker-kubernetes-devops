# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  tag: $(Build.BuildId)
  
steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'

# - task: Docker@2
#   inputs:
#     containerRegistry: 'docker-service-connection'
#     repository: 'dotnetapp'
#     command: 'buildAndPush'
#     Dockerfile: '**/Dockerfile'
#     tags: '$(tag)'


# - task: KubernetesManifest@1
#   inputs:
#     action: 'deploy'
#     connectionType: 'kubernetesServiceConnection'
#     kubernetesServiceConnection: 'kube-service-connection'
#     namespace: 'default'
#     manifests: |
#       $(System.DefaultWorkingDirectory)/**/deployment.yaml
#       $(System.DefaultWorkingDirectory)/**/service.yaml
#     containers: 'vaishuacr0909.azurecr.io/dotnetapp:225'

- task: Docker@2
  inputs:
    containerRegistry: 'docker-service-connection'
    repository: 'dotnetapp'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
    tags: '$(tag)'

- task: KubernetesManifest@1
  inputs:
    action: 'deploy'
    connectionType: 'kubernetesServiceConnection'
    kubernetesServiceConnection: 'kube-service-connection'
    namespace: 'default'
    manifests: |
      $(System.DefaultWorkingDirectory)/dotnet-terraform-docker-kubernetes-devops/manifests/deployment.yaml
      $(System.DefaultWorkingDirectory)/dotnet-terraform-docker-kubernetes-devops/manifests/service.yaml
    containers: 'vaishuacr0909.azurecr.io/dotnetapp:$(tag)'