# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest


stages:
  - stage: RunTestScript
    jobs:
      - job: RunScript
        steps:
          - bash: echo "Hello World !"

  - stage: TerraformInitStage
    jobs:
      - job: Init
        steps:
          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(System.DefaultWorkingDirectory)/dotnet-terraform-docker-kubernetes-devops/infrastructure'
              backendServiceArm: 'azure-service-connection'
              backendAzureRmResourceGroupName: 'app-grp'
              backendAzureRmStorageAccountName: 'appstorageaccnt0909'
              backendAzureRmContainerName: 'terraformstate'
              backendAzureRmKey: 'terraform-dev.tfstate'

  - stage: TerraformApplyOrDestroy
    jobs:
      - job: ApplyOrDestroy
        steps:
          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'apply'
              workingDirectory: '$(System.DefaultWorkingDirectory)/dotnet-terraform-docker-kubernetes-devops/infrastructure'
              environmentServiceNameAzureRM: 'azure-service-connection'